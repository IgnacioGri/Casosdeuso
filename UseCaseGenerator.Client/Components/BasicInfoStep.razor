@using MudBlazor
@using UseCaseGenerator.Shared.DTOs
@using UseCaseGenerator.Client.Services
@using UseCaseGenerator.Client.Components
@using System.Text.Json
@inject IAIAssistService AIAssistService
@inject ISnackbar Snackbar

<div class="wide-form-section">
    <MudText Typo="Typo.h5" GutterBottom="true" Color="Color.Primary">
        Información Básica del Caso de Uso
    </MudText>
    <MudText Typo="Typo.body1" Class="mb-4">
        Completa la información fundamental que identifica el caso de uso en el proyecto.
    </MudText>
    
    <div class="wide-form-grid">
    <div>
        <div class="d-flex align-items-baseline gap-1 mb-1">
            <MudText Typo="Typo.body1" Class="text-subtitle">Nombre del Cliente</MudText>
            <ContextualTooltip
                Content="Nombre completo de la empresa u organización cliente"
                Example="Banco Provincia, Banco Macro, YPF"
                Format="Nombre formal de la institución"
                Side="top"
                Class="ml-1" />
        </div>
        <SmartAutocomplete
            @bind-Value="FormData.ClientName"
            Placeholder="Ej: Banco Provincia"
            Suggestions="@clientSuggestions"
            Class="w-full" />
    </div>
    
    <div>
        <div class="d-flex align-items-baseline gap-1 mb-1">
            <MudText Typo="Typo.body1" Class="text-subtitle">Nombre del Proyecto</MudText>
            <ContextualTooltip
                Content="Nombre completo del proyecto o sistema"
                Example="Sistema de Gestión Integral, Portal Web Bancario"
                Format="Nombre descriptivo del proyecto"
                Side="top"
                Class="ml-1" />
        </div>
        <SmartAutocomplete
            @bind-Value="FormData.ProjectName"
            Placeholder="Ej: Sistema de Gestión Integral"
            Suggestions="@projectSuggestions"
            Class="w-full" />
    </div>
    
    <div>
        <div class="d-flex align-items-baseline gap-1 mb-1">
            <MudText Typo="Typo.body1" Class="text-subtitle">Código del Caso de Uso</MudText>
            <ContextualTooltip
                Content="Identificador único del caso de uso"
                Example="BP001, MC002, YP003"
                Format="2 letras mayúsculas + 3 números"
                Side="top"
                Class="ml-1" />
        </div>
        <MudTextField @bind-Value="FormData.UseCaseCode"
                      Variant="Variant.Outlined"
                      Required="true"
                      Placeholder="Ej: BP001"
                      Class="mb-2"
                      UserAttributes="@(new Dictionary<string, object> { 
                          {"autocomplete", "nope"}, 
                          {"autocorrect", "off"}, 
                          {"autocapitalize", "off"}, 
                          {"spellcheck", "false"},
                          {"data-lpignore", "true"},
                          {"data-form-type", "other"}
                      })" />
    </div>
    
    <div>
        <div class="d-flex align-items-baseline gap-1 mb-1">
            <MudText Typo="Typo.body1" Class="text-subtitle">Nombre del Caso de Uso</MudText>
            <ContextualTooltip
                Content="Nombre descriptivo que comienza con verbo en infinitivo"
                Example="Gestionar Clientes, Consultar Saldos, Crear Transferencias"
                Format="Verbo infinitivo + Objeto"
                Side="top"
                Class="ml-1" />
        </div>
        <SmartAutocomplete
            @bind-Value="FormData.UseCaseName"
            Placeholder="Ej: Gestionar Clientes Premium"
            Suggestions="@useCaseSuggestions"
            Class="w-full" />
    </div>
    </div>
    
    <div class="mt-4">
        <div class="d-flex align-items-baseline gap-1 mb-1">
            <MudText Typo="Typo.body1" Class="text-subtitle">Nombre del Archivo</MudText>
            <ContextualTooltip
                Content="Nombre del archivo sin extensión ni espacios"
                Example="BP001GestionarClientes, MC002ConsultarSaldos"
                Format="CódigoCasoUso + NombreCasoUso (sin espacios)"
                Side="top"
                Class="ml-1" />
        </div>
        <MudTextField @bind-Value="FormData.FileName"
                      Variant="Variant.Outlined"
                      Required="true"
                      Placeholder="Ej: BP001GestionarClientes"
                      Class="mb-2"
                      UserAttributes="@(new Dictionary<string, object> { 
                          {"autocomplete", "nope"}, 
                          {"autocorrect", "off"}, 
                          {"autocapitalize", "off"}, 
                          {"spellcheck", "false"},
                          {"data-lpignore", "true"},
                          {"data-form-type", "other"}
                      })" />
    </div>
    
    <div class="mt-4">
        <MudAlert Severity="Severity.Info" Dense="true">
            <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Class="mr-2" />
            <strong>Validaciones automáticas:</strong> El sistema verificará que el código siga el formato correcto 
            y que el nombre del caso de uso comience con un verbo en infinitivo según estándares ING.
        </MudAlert>
    </div>
    
    <div class="mt-4">
        <MudButton Variant="Variant.Outlined" 
                   Color="Color.Secondary" 
                   StartIcon="@Icons.Material.Filled.AutoFixHigh"
                   OnClick="LoadPremiumClientExample"
                   Class="mt-2">
            Cargar Ejemplo: Cliente Premium Bancario
        </MudButton>
    </div>
</div>

@code {
    [Parameter] public UseCaseFormData FormData { get; set; } = new();
    [Parameter] public EventCallback<UseCaseFormData> FormDataChanged { get; set; }

    private List<string> clientSuggestions = new()
    {
        "Banco Provincia", "Banco Macro", "Banco Galicia", "Banco Santander",
        "Banco BBVA", "Banco HSBC", "Banco Ciudad", "Banco Nación",
        "YPF", "Telecom", "Personal", "Movistar", "Claro"
    };

    private List<string> projectSuggestions = new()
    {
        "Sistema de Gestión Integral", "Portal Web Bancario", "Sistema de Home Banking",
        "Plataforma de Pagos", "Sistema de Transferencias", "Portal de Clientes",
        "Sistema de Atención al Cliente", "Plataforma Digital", "Sistema de Facturación"
    };

    private List<string> useCaseSuggestions = new()
    {
        "Gestionar Clientes", "Gestionar Clientes Premium", "Consultar Saldos",
        "Realizar Transferencias", "Administrar Cuentas", "Generar Reportes",
        "Procesar Pagos", "Validar Documentos", "Autorizar Operaciones",
        "Configurar Perfiles", "Auditar Transacciones", "Exportar Datos"
    };

    private async Task LoadPremiumClientExample()
    {
        FormData.ClientName = "Banco Provincia";
        FormData.ProjectName = "Gestión Integral de Clientes Premium";
        FormData.UseCaseCode = "BP005";
        FormData.UseCaseName = "Gestionar Clientes Premium";
        FormData.FileName = "BP005GestionarClientesPremium";
        
        await FormDataChanged.InvokeAsync(FormData);
        Snackbar.Add("Ejemplo cargado correctamente", Severity.Success);
    }
}