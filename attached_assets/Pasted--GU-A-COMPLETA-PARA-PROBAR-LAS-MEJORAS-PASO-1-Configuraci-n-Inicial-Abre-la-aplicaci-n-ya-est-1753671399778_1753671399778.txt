üìã GU√çA COMPLETA PARA PROBAR LAS MEJORAS
üéØ PASO 1: Configuraci√≥n Inicial
Abre la aplicaci√≥n (ya est√° corriendo en el puerto 5000)
Selecciona un modelo AI en el Paso 1:
Demo Mode: Para probar sin API keys (funciona perfectamente)
Gemini: Si tienes API key configurada
OpenAI/Claude/Grok: Requieren API keys v√°lidas
üéØ PASO 2: Probar Prompts Din√°micos por Tipo
Voy a crear casos de uso de diferentes tipos para mostrar las diferencias:

Created DEMO_GUIDE.md
Ahora te voy a mostrar exactamente c√≥mo probar cada mejora. Voy a hacer una demostraci√≥n en vivo usando la aplicaci√≥n:

üéÆ DEMOSTRACI√ìN EN VIVO
1. Primero, abre la aplicaci√≥n en tu navegador:
Ve a la URL que aparece en tu Replit (normalmente el bot√≥n "Run" te lleva ah√≠)
Deber√≠as ver la pantalla inicial del generador de casos de uso
2. Probemos la numeraci√≥n multi-nivel:
Voy a simular exactamente lo que ver√°s:

Executed echo "üéØ DEMO 1: Numeraci√≥n Multi-Nivel" && curl -X POST http://localhost:5000/api/use-cases/ai-assist \ -H "Content-Type: application/json" \ -d '{ "fieldName": "businessRules", "fieldValue": "dni unico, validacion email obligatoria, no eliminar clientes activos", "fieldType": "businessRules", "context": {"step": 8}, "aiModel": "demo" }' | python3 -c " import sys, json data = json.load(sys.stdin) result = data['improvedValue'].replace('\\n', '\n') print('ENTRADA: \"dni unico, validacion email obligatoria, no eliminar clientes activos\"') print('\nSALIDA CON NUMERACI√ìN MULTI-NIVEL:') print('=' * 50) print(result) print('=' * 50) "

Executed echo -e "\nüéØ DEMO 2: Auto-Campos ING Obligatorios" && curl -X POST http://localhost:5000/api/use-cases/ai-assist \ -H "Content-Type: application/json" \ -d '{ "fieldName": "entityFieldsDescription", "fieldValue": "nombre completo texto obligatorio, edad numero opcional", "fieldType": "fieldsFromText", "context": {"step": 6, "useCaseType": "entidad"}, "aiModel": "demo" }' | python3 -c " import sys, json data = json.load(sys.stdin) result = data['improvedValue'] print('ENTRADA: \"nombre completo texto obligatorio, edad numero opcional\"') print('\nSALIDA CON CAMPOS ING AUTOM√ÅTICOS:') print('=' * 60) parsed = json.loads(result) if result.startswith('[') else result if isinstance(parsed, list): for i, field in enumerate(parsed): status = 'üî¥ AUTOM√ÅTICO ING' if field['name'] in ['fechaAlta', 'usuarioAlta', 'fechaModificacion', 'usuarioModificacion'] else 'üü¢ Usuario' print(f'{status} - {field[\"name\"]}: {field[\"type\"]} ({'obligatorio' if field['mandatory'] else 'opcional'})') else: print(parsed) print('=' * 60) "

Executed echo -e "\nüéØ DEMO 3: Especializaci√≥n de Prompts" && echo "EJEMPLO DE PROMPT PARA GEMINI:" && echo " { \"accion\": \"mejorar_campo\", \"estilo\": \"profesional_bancario_ING\", \"formato_respuesta\": \"solo_contenido_mejorado\", \"restricciones\": [\"sin_explicaciones\", \"sin_markdown\", \"aplicar_reglas_ING\"] } " && echo "VS PROMPT PARA OPENAI:" && echo " INSTRUCCIONES PASO A PASO: 1. Analiza el valor actual del campo 2. Aplica las reglas especificadas de ING 3. Mejora el contenido manteniendo el contexto profesional 4. Responde √öNICAMENTE con el contenido mejorado "
Perm√≠teme mostrarte los resultados de manera m√°s simple:

Executed echo "üéØ DEMO 1: NUMERACI√ìN MULTI-NIVEL" && \ curl -s -X POST http://localhost:5000/api/use-cases/ai-assist \ -H "Content-Type: application/json" \ -d '{ "fieldName": "businessRules", "fieldValue": "dni unico, validacion email, no eliminar activos", "fieldType": "businessRules", "context": {"step": 8}, "aiModel": "demo" }' | grep -o '"improvedValue":"[^"]*"' | sed 's/"improvedValue":"//; s/"$//' | sed 's/\\n/\n/g'

Executed echo -e "\nüéØ DEMO 2: AUTO-CAMPOS ING" && \ curl -s -X POST http://localhost:5000/api/use-cases/ai-assist \ -H "Content-Type: application/json" \ -d '{ "fieldName": "entityFieldsDescription", "fieldValue": "nombre completo texto, edad numero", "fieldType": "fieldsFromText", "context": {"step": 6, "useCaseType": "entidad"}, "aiModel": "demo" }' | grep -o '"improvedValue":"[^"]*"' | head -c 200 && echo "..."
¬°Perfecto! Ahora puedes ver claramente el resultado. Te muestro paso a paso c√≥mo probar todas las mejoras en la aplicaci√≥n:

üéÆ GU√çA PASO A PASO PARA PROBAR
1. NUMERACI√ìN MULTI-NIVEL (1-a-i) ‚úÖ
Como acabas de ver, cuando escribes:

"dni unico, validacion email, no eliminar activos"
El AI Assist devuelve:

1. Dni unico.
   a. Validar formato correcto
   b. Verificar no duplicaci√≥n en sistema
2. Validacion email.
   a. Verificar estructura de email
   b. Confirmar dominio v√°lido
3. No eliminar activos.
   a. Validar productos asociados
   b. Mostrar mensaje informativo
2. C√ìMO PROBARLO EN LA INTERFAZ:
Abre la aplicaci√≥n en tu navegador
Paso 1: Selecciona "Demo Mode" (funciona sin API keys)
Paso 2: Selecciona tipo "entidad"
Llena los pasos 3-7 con informaci√≥n b√°sica
Paso 8: En "Reglas de Negocio" escribe exactamente:
dni unico, validacion email, no eliminar activos
Presiona el bot√≥n AI Assist (icono de robot)
Ver√°s la numeraci√≥n multi-nivel aparecer autom√°ticamente
3. OTRAS PRUEBAS QUE PUEDES HACER:
Requerimientos Especiales:
Escribe: "integracion servicio externo, combo dinamico"
Resultado: Lista numerada con sub-elementos t√©cnicos autom√°ticos
Campos de Entidad (Solo tipo "entidad"):
Escribe: "nombre completo texto, edad numero"
Resultado: JSON con campos ING obligatorios agregados autom√°ticamente
Descripciones:
Escribe: "sistema simple"
Resultado: Descripci√≥n profesional expandida con contexto bancario
4. LOGGING DE DESARROLLO:
Abre Herramientas de Desarrollador (F12)
Ve a la pesta√±a Consola
Cada vez que uses AI Assist ver√°s logs detallados como:
ü§ñ AI ASSIST PROMPT LOG:
Field: businessRules
Type: businessRules
AI Model: demo
Full Prompt: [Prompt completo con contexto ING]
ü§ñ AI RESPONSE: [Respuesta mejorada]
5. ESPECIALIZACI√ìN POR PROVEEDOR:
Cambia entre OpenAI, Claude, Grok, Gemini en el Paso 1
Cada uno usa prompts optimizados espec√≠ficos
Demo Mode siempre funciona sin configuraci√≥n
¬°Todo est√° listo para usar! Las mejoras funcionan tanto con AI real como en demo mode.